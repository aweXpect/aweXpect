"use strict";(self.webpackChunkpages=self.webpackChunkpages||[]).push([[8676],{6687:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"extensions/project/Web/index","title":"[aweXpect.Web](https://github.com/aweXpect/aweXpect.Web) [![Nuget](https://img.shields.io/nuget/v/aweXpect.Web)](https://www.nuget.org/packages/aweXpect.Web)","description":"Expectations for HttpClient.","source":"@site/docs/extensions/project/Web/00-index.md","sourceDirName":"extensions/project/Web","slug":"/extensions/project/Web/index","permalink":"/docs/extensions/project/Web/index","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/extensions/project/Web/00-index.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{},"sidebar":"extensionsSidebar","previous":{"title":"aweXpect.Testably","permalink":"/docs/extensions/project/Testably/index"},"next":{"title":"Write your own extension","permalink":"/docs/extensions/write-extensions"}}');var o=s(4848),c=s(8453);const a={},i="aweXpect.Web Nuget",r={},p=[{value:"<code>HttpResponseMessage</code>",id:"httpresponsemessage",level:2},{value:"Content",id:"content",level:3},{value:"Status code",id:"status-code",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"awexpectweb-nuget",children:[(0,o.jsx)(t.a,{href:"https://github.com/aweXpect/aweXpect.Web",children:"aweXpect.Web"})," ",(0,o.jsx)(t.a,{href:"https://www.nuget.org/packages/aweXpect.Web",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/nuget/v/aweXpect.Web",alt:"Nuget"})})]})}),"\n",(0,o.jsxs)(t.p,{children:["Expectations for ",(0,o.jsx)(t.code,{children:"HttpClient"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"httpresponsemessage",children:(0,o.jsx)(t.code,{children:"HttpResponseMessage"})}),"\n",(0,o.jsx)(t.h3,{id:"content",children:"Content"}),"\n",(0,o.jsxs)(t.p,{children:["You can verify, the content of the ",(0,o.jsx)(t.code,{children:"HttpResponseMessage"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'HttpResponseMessage response = await httpClient.GetAsync("https://github.com/aweXpect/aweXpect");\n\nawait Expect.That(response).HasContent("*aweXpect*").AsWildcard();\n'})}),"\n",(0,o.jsxs)(t.p,{children:["You can use the same configuration options as when ",(0,o.jsx)(t.a,{href:"/docs/expectations/string#equality",children:"comparing strings"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"status-code",children:"Status code"}),"\n",(0,o.jsxs)(t.p,{children:["You can verify, that the status code of the ",(0,o.jsx)(t.code,{children:"HttpResponseMessage"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'HttpResponseMessage response = await httpClient.GetAsync("https://github.com/aweXpect/aweXpect");\nawait Expect.That(response).HasStatusCode().Success();\nawait Expect.That(response).HasStatusCode().EqualTo(HttpStatusCode.OK);\n\nresponse = await httpClient.PostAsync("https://github.com/aweXpect/aweXpect", new StringContent(""));\nawait Expect.That(response).HasStatusCode().ClientError().Or.HasStatusCode().ServerError().Or.HasStatusCode().Redirection();\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Great care was taken to provide as much information as possible, when a status verification failed.",(0,o.jsx)(t.br,{}),"\n","The response could look similar to:"]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"Expected that response\nhas success status code (2xx),\nbut it was 404 NotFound\n\nHTTP-Request:\n  HTTP/1.1 404 NotFound\n    Server: GitHub.com\n    Date: Fri, 29 Nov 2024 07:55:47 GMT\n    Cache-Control: no-cache\n    Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin\n    X-GitHub-Request-Id: DB30:24038B:287F716:29D98BD:67497384\n  Content is binary\n  The originating request was:\n    GET https://github.com/aweXpect/missing-repo HTTP 1.1\n"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var n=s(6540);const o={},c=n.createContext(o);function a(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);