"use strict";(self.webpackChunkpages=self.webpackChunkpages||[]).push([[194],{4836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"expectations/numbers","title":"Numbers","description":"Describes the possible expectations for numbers.","source":"@site/docs/expectations/numbers.md","sourceDirName":"expectations","slug":"/expectations/numbers","permalink":"/aweXpect/docs/expectations/numbers","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/expectations/numbers.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Strings","permalink":"/aweXpect/docs/expectations/strings"},"next":{"title":"Dates and times","permalink":"/aweXpect/docs/expectations/dates-times"}}');var a=n(4848),i=n(8453);const c={sidebar_position:3},r="Numbers",o={},l=[{value:"Equality",id:"equality",level:2},{value:"Greater than / less than",id:"greater-than--less-than",level:2},{value:"Positive / negative",id:"positive--negative",level:2},{value:"Special cases for floating numbers",id:"special-cases-for-floating-numbers",level:2}];function h(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"numbers",children:"Numbers"})}),"\n",(0,a.jsx)(t.p,{children:"Describes the possible expectations for numbers."}),"\n",(0,a.jsx)(t.h2,{id:"equality",children:"Equality"}),"\n",(0,a.jsx)(t.p,{children:"For asserting whether a number is equal to another one, use:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"int subject = 42;\nawait Expect.That(subject).Should().Be(42);\n"})}),"\n",(0,a.jsx)(t.p,{children:"You can also specify a tolerance:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"double subject = 42.1;\nawait Expect.That(subject).Should().Be(42).Within(0.2);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"greater-than--less-than",children:"Greater than / less than"}),"\n",(0,a.jsx)(t.p,{children:"You can also verify that a number is greater than or less than another value"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"int subject = 42;\nawait Expect.That(subject).Should().BeGreaterThan(41);\nawait Expect.That(subject).Should().BeGreaterThanOrEqualTo(42);\nawait Expect.That(subject).Should().BeLessThanOrEqualTo(42);\nawait Expect.That(subject).Should().BeLessThan(43);\n"})}),"\n",(0,a.jsx)(t.p,{children:"Also for these methods you can specify a tolerance, e.g."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"double subject = 42.0;\nawait Expect.That(subject).Should().BeLessThan(42).Within(0.1);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"positive--negative",children:"Positive / negative"}),"\n",(0,a.jsx)(t.p,{children:"As a special case, to verify, if a number is positive or negative, you can use the following expectations."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"int subject = 42;\nawait Expect.That(subject).Should().BePositive();\nawait Expect.That(subject).Should().BeNegative();\n"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"Note: these methods are only available for signed numbers!"})}),"\n",(0,a.jsx)(t.h2,{id:"special-cases-for-floating-numbers",children:"Special cases for floating numbers"}),"\n",(0,a.jsxs)(t.p,{children:["For ",(0,a.jsx)(t.code,{children:"double"})," and ",(0,a.jsx)(t.code,{children:"float"})," the following expectations are additionally available:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"double subject = double.NaN;\nawait Expect.That(subject).Should().BeNaN();\n\nsubject = double.PositiveInfinity;\nawait Expect.That(subject).Should().BeInfinite();\n\nsubject = 42;\nawait Expect.That(subject).Should().BeFinite();\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var s=n(6540);const a={},i=s.createContext(a);function c(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);