"use strict";(self.webpackChunkpages=self.webpackChunkpages||[]).push([[454],{4983:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"expectations/collections","title":"Collections","description":"Describes the possible expectations for collections.","source":"@site/docs/expectations/collections.md","sourceDirName":"expectations","slug":"/expectations/collections","permalink":"/aweXpect/docs/expectations/collections","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/expectations/collections.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"HTTP","permalink":"/aweXpect/docs/expectations/http"},"next":{"title":"Delegates","permalink":"/aweXpect/docs/expectations/delegates"}}');var a=t(4848),i=t(8453);const l={sidebar_position:13},c="Collections",o={},r=[{value:"All",id:"all",level:2},{value:"At least",id:"at-least",level:2},{value:"At most",id:"at-most",level:2},{value:"Between",id:"between",level:2},{value:"None",id:"none",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"collections",children:"Collections"})}),"\n",(0,a.jsx)(n.p,{children:"Describes the possible expectations for collections."}),"\n",(0,a.jsx)(n.h2,{id:"all",children:"All"}),"\n",(0,a.jsx)(n.p,{children:"You can verify, that all items in the collection, satisfy an expectation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"IEnumerable<int> values = Enumerable.Range(1, 20);\n\nawait Expect.That(values).Should().All().Satisfy(i => i <= 20);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Note: The same expectation works also for ",(0,a.jsx)(n.code,{children:"IAsyncEnumerable<T>"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"at-least",children:"At least"}),"\n",(0,a.jsx)(n.p,{children:"You can verify, that at least a fixed number of items in the collection, satisfy an expectation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"IEnumerable<int> values = Enumerable.Range(1, 20);\n\nawait Expect.That(values).Should().AtLeast(9).Satisfy(i => i < 10);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Note: The same expectation works also for ",(0,a.jsx)(n.code,{children:"IAsyncEnumerable<T>"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"at-most",children:"At most"}),"\n",(0,a.jsx)(n.p,{children:"You can verify, that at most a fixed number of items in the collection, satisfy an expectation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"IEnumerable<int> values = Enumerable.Range(1, 20);\n\nawait Expect.That(values).Should().AtMost(1).Satisfy(i => i < 2);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Note: The same expectation works also for ",(0,a.jsx)(n.code,{children:"IAsyncEnumerable<T>"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"between",children:"Between"}),"\n",(0,a.jsxs)(n.p,{children:["You can verify, that between ",(0,a.jsx)(n.code,{children:"minimum"})," and ",(0,a.jsx)(n.code,{children:"maximum"})," items in the collection, satisfy an expectation:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"IEnumerable<int> values = Enumerable.Range(1, 20);\nawait Expect.That(values).Should().Between(1).And(2).Satisfy(i => i < 2);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Note: The same expectation works also for ",(0,a.jsx)(n.code,{children:"IAsyncEnumerable<T>"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"none",children:"None"}),"\n",(0,a.jsx)(n.p,{children:"You can verify, that not item in the collection, satisfies an expectation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"IEnumerable<int> values = Enumerable.Range(1, 20);\n\nawait Expect.That(values).Should().None().Satisfy(i => i > 20);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Note: The same expectation works also for ",(0,a.jsx)(n.code,{children:"IAsyncEnumerable<T>"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(6540);const a={},i=s.createContext(a);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);