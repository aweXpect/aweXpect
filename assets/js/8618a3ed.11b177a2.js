"use strict";(self.webpackChunkpages=self.webpackChunkpages||[]).push([[9797],{8072:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"concepts/customization","title":"customization","description":"You can add cancellation support on the expectations, so that they can\'t run indefinitely:","source":"@site/docs/concepts/customization.md","sourceDirName":"concepts","slug":"/concepts/customization","permalink":"/docs/concepts/customization","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/concepts/customization.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Concepts","permalink":"/docs/category/concepts"},"next":{"title":"Extensibility","permalink":"/docs/category/extensibility"}}');var a=n(4848),s=n(8453);const i={sidebar_position:1},c=void 0,l={},r=[{value:"Global settings",id:"global-settings",level:2},{value:"Timeout",id:"timeout",level:3},{value:"<code>CancellationToken</code>",id:"cancellationtoken",level:3},{value:"Local settings",id:"local-settings",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"You can add cancellation support on the expectations, so that they can't run indefinitely:"}),"\n",(0,a.jsx)(t.h2,{id:"global-settings",children:"Global settings"}),"\n",(0,a.jsx)(t.h3,{id:"timeout",children:"Timeout"}),"\n",(0,a.jsx)(t.p,{children:"You can set a global timeout that is applied for all expectations:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"// Sets a global timeout of 10 seconds\nCustomize.aweXpect.Settings().TestCancellation\n    .Set(TestCancellation.FromTimeout(TimeSpan.FromSeconds(10)));\n// Uses the CancellationToken from the test context\nCustomize.aweXpect.Settings().TestCancellation.Set(() => TestContext.Current.CancellationToken);\n"})}),"\n",(0,a.jsx)(t.h3,{id:"cancellationtoken",children:(0,a.jsx)(t.code,{children:"CancellationToken"})}),"\n",(0,a.jsxs)(t.p,{children:["You can set a global factory for getting a ",(0,a.jsx)(t.code,{children:"CancellationToken"})," that is applied for all expectations:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"// Uses the CancellationToken from the test context\nCustomize.aweXpect.Settings().TestCancellation\n    .Set(() => TestContext.Current.CancellationToken);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Note: Like all customization options, the setter returns an ",(0,a.jsx)(t.code,{children:"IDisposable"})," that will remove the cancellation on ",(0,a.jsx)(t.code,{children:"Dispose()"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"local-settings",children:"Local settings"}),"\n",(0,a.jsxs)(t.p,{children:["You can overwrite or apply the ",(0,a.jsx)(t.code,{children:"CancellationToken"})," also on individual expectations, using the ",(0,a.jsx)(t.code,{children:"WithCancellation(CancellationToken)"})," method, e.g."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"using var cts = new CancellationTokenSource(TimeSpan.FromSeconds(1));\nIAsyncEnumerable<int> myEnumerable = // ...\nawait Expect.That(myEnumerable).All().AreEqualTo(1)\n    .WithCancellation(cts.Token);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Note: A local ",(0,a.jsx)(t.code,{children:"CancellationToken"})," will replace the global one and not be applied additionally.\nIf necessary, provide a ",(0,a.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource.createlinkedtokensource",children:"linked cancellation token"})," yourself!"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(6540);const a={},s=o.createContext(a);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);