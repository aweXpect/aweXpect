"use strict";(self.webpackChunkpages=self.webpackChunkpages||[]).push([[9595],{2960:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"expectations/json","title":"JSON","description":"Describes the possible expectations for working with System.Text.Json.","source":"@site/docs/expectations/json.md","sourceDirName":"expectations","slug":"/expectations/json","permalink":"/aweXpect/docs/expectations/json","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/expectations/json.md","tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"sidebar_position":17},"sidebar":"tutorialSidebar","previous":{"title":"Callbacks","permalink":"/aweXpect/docs/expectations/callbacks"},"next":{"title":"Extensibility","permalink":"/aweXpect/docs/category/extensibility"}}');var o=t(4848),a=t(8453);const i={sidebar_position:17},c="JSON",r={},l=[{value:"String comparison as JSON",id:"string-comparison-as-json",level:2},{value:"Validation",id:"validation",level:2},{value:"<code>JsonElement</code>",id:"jsonelement",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"json",children:"JSON"})}),"\n",(0,o.jsxs)(n.p,{children:["Describes the possible expectations for working with ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.text.json",children:"System.Text.Json"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"string-comparison-as-json",children:"String comparison as JSON"}),"\n",(0,o.jsx)(n.p,{children:"You can compare two strings for JSON equivalency:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'string subject = "{\\"foo\\":{\\"bar\\":[1,2,3]}}";\nstring expected = """\n                  {\n                    "foo": {\n                      "bar": [ 1, 2, 3 ]\n                    }\n                  }\n                  """;\n\nawait Expect.That(subject).Should().Be(expected).AsJson();\n'})}),"\n",(0,o.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,o.jsx)(n.p,{children:"You can verify, that a string is valid JSON."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'string subject = "{\\"foo\\": 2}";\n\nawait Expect.That(subject).Should().BeValidJson();\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This verifies that the string can be parsed by ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.text.json.jsondocument.parse",children:(0,o.jsx)(n.code,{children:"JsonDocument.Parse"})})," without exceptions."]}),"\n",(0,o.jsxs)(n.p,{children:["You can also specify the ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.text.json.jsondocumentoptions",children:(0,o.jsx)(n.code,{children:"JsonDocumentOptions"})}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'string subject = "{\\"foo\\": 2}";\n\nawait Expect.That(subject).Should().BeValidJson(o => o with {CommentHandling = JsonCommentHandling.Disallow});\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can also add additional expectations on the ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.text.json.jsonelement",children:(0,o.jsx)(n.code,{children:"JsonElement"})})," created when parsing the subject:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'string subject = "{\\"foo\\": 2}";\n\nawait Expect.That(subject).Should().BeValidJson().Which(j => j.Should().HaveCount(1));\n'})}),"\n",(0,o.jsx)(n.h2,{id:"jsonelement",children:(0,o.jsx)(n.code,{children:"JsonElement"})}),"\n",(0,o.jsxs)(n.p,{children:["You can verify, that the ",(0,o.jsx)(n.code,{children:"JsonElement"})," has the expected number of items:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'JsonElement subject = JsonDocument.Parse("[1,2]").RootElement;\n\nawait Expect.That(subject).Should().HaveCount(2);\nawait Expect.That(subject).Should().NotHaveCount(3);\n'})}),"\n",(0,o.jsx)(n.p,{children:"This works for both, arrays and objects, but fails for all other JSON types."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(6540);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);