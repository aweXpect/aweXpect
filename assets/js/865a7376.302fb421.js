"use strict";(globalThis.webpackChunkpages=globalThis.webpackChunkpages||[]).push([[4946],{3400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"expectations/advanced/multiple-expectations","title":"Multiple expectations","description":"You can combine multiple expectations in different ways:","source":"@site/docs/expectations/advanced/01-multiple-expectations.md","sourceDirName":"expectations/advanced","slug":"/expectations/advanced/multiple-expectations","permalink":"/docs/expectations/advanced/multiple-expectations","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/expectations/advanced/01-multiple-expectations.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Advanced","permalink":"/docs/category/advanced"},"next":{"title":"Customization","permalink":"/docs/expectations/advanced/customization"}}');var c=n(4848),o=n(8453);const i={},a="Multiple expectations",r={},d=[{value:"On the same property",id:"on-the-same-property",level:2},{value:"On different properties of the same subject",id:"on-different-properties-of-the-same-subject",level:2},{value:"On different subjects",id:"on-different-subjects",level:2}];function l(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"multiple-expectations",children:"Multiple expectations"})}),"\n",(0,c.jsx)(t.p,{children:"You can combine multiple expectations in different ways:"}),"\n",(0,c.jsx)(t.h2,{id:"on-the-same-property",children:"On the same property"}),"\n",(0,c.jsxs)(t.p,{children:["Simply use ",(0,c.jsx)(t.code,{children:".And"})," or ",(0,c.jsx)(t.code,{children:".Or"})," to combine multiple expectations, e.g."]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-csharp",children:'string subject = "something different";\nawait Expect.That(subject).StartsWith("some").And.EndsWith("text");\n'})}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:'Expected subject to\nstart with "some" and end with "text",\nbut it was "something different"\n'})}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"on-different-properties-of-the-same-subject",children:"On different properties of the same subject"}),"\n",(0,c.jsxs)(t.p,{children:["Use the ",(0,c.jsx)(t.code,{children:"For"}),"-syntax to access different properties of a common subject and combine them again with ",(0,c.jsx)(t.code,{children:".And"})," or ",(0,c.jsx)(t.code,{children:".Or"}),",\ne.g."]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-csharp",children:'  public record MyClass(int Status, string Content);\n  MyClass subject = new(1, "some other content");\n  \n  await Expect.That(subject)\n    .For(x => x.Status, x => x.IsGreaterThan(1)).And\n    .For(x => x.Content, x => x.Is("some content"));\n'})}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:'Expected subject to\nfor .Status be greater than 1 and for .Content be equal to "some content",\nbut .Status was 1 and .Content was "some other content" which differs at index 5:\n        \u2193 (actual)\n  "some other content"\n  "some content"\n        \u2191 (expected)\n'})}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"on-different-subjects",children:"On different subjects"}),"\n",(0,c.jsxs)(t.p,{children:["Use the ",(0,c.jsx)(t.code,{children:"Expect.ThatAll"})," or ",(0,c.jsx)(t.code,{children:"Expect.ThatAny"})," syntax to combine arbitrary expectations, e.g."]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-csharp",children:'  string subjectA = "ABC";\n  string subjectB = "XYZ";\n  \n  await Expect.ThatAll(\n    Expect.That(subjectA).Is("ABC"),\n    Expect.That(subjectB).Is("DEF"));\n'})}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:'Expected all of the following to succeed:\n [01] Expected subjectA to be equal to "ABC"\n [02] Expected subjectB to be equal to "DEF"\nbut\n [02] it was "XYZ" which differs at index 0:\n         \u2193 (actual)\n        "XYZ"\n        "DEF"\n         \u2191 (expected)\n'})}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(6540);const c={},o=s.createContext(c);function i(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);