"use strict";(self.webpackChunkpages=self.webpackChunkpages||[]).push([[5440],{5746:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>r});const a=JSON.parse('{"id":"expectations/advanced/cancellation","title":"Cancellation","description":"You can add cancellation support on the expectations, so that they don\'t run indefinitely:","source":"@site/docs/expectations/advanced/03-cancellation.md","sourceDirName":"expectations/advanced","slug":"/expectations/advanced/cancellation","permalink":"/docs/expectations/advanced/cancellation","draft":false,"unlisted":false,"editUrl":"https://github.com/aweXpect/aweXpect/tree/main/Docs/pages/docs/expectations/advanced/03-cancellation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Customization","permalink":"/docs/expectations/advanced/customization"},"next":{"title":"Callbacks","permalink":"/docs/expectations/advanced/callbacks"}}');var o=t(4848),c=t(8453);const l={},i="Cancellation",s={},r=[{value:"Timeout",id:"timeout",level:2},{value:"<code>CancellationToken</code>",id:"cancellationtoken",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"cancellation",children:"Cancellation"})}),"\n",(0,o.jsx)(n.p,{children:"You can add cancellation support on the expectations, so that they don't run indefinitely:"}),"\n",(0,o.jsx)(n.h2,{id:"timeout",children:"Timeout"}),"\n",(0,o.jsx)(n.p,{children:"You can set a global timeout that is applied for all expectations:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"// Sets a global timeout of 10 seconds\nCustomize.aweXpect.Settings().TestCancellation\n    .Set(TestCancellation.FromTimeout(TimeSpan.FromSeconds(10)));\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["Note: Like all customization options, the setter returns an ",(0,o.jsx)(n.code,{children:"IDisposable"})," that will remove the cancellation on ",(0,o.jsx)(n.code,{children:"Dispose()"}),"."]})}),"\n",(0,o.jsxs)(n.p,{children:["You can overwrite or apply the timeout also on individual expectations, using the ",(0,o.jsx)(n.code,{children:"WithTimeout(TimeSpan)"})," method, e.g."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"IAsyncEnumerable<int> myEnumerable = // ...\nawait Expect.That(myEnumerable).All().AreEqualTo(1)\n    .WithTimeout(TimeSpan.FromSeconds(10));\n"})}),"\n",(0,o.jsx)(n.p,{children:"*Note: A local timeout will replace the global one and not be applied additionally."}),"\n",(0,o.jsx)(n.h2,{id:"cancellationtoken",children:(0,o.jsx)(n.code,{children:"CancellationToken"})}),"\n",(0,o.jsxs)(n.p,{children:["You can set a global provider for getting a ",(0,o.jsx)(n.code,{children:"CancellationToken"})," that is applied for all expectations:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"// Uses the CancellationToken from the test context\nCustomize.aweXpect.Settings().TestCancellation\n    .Set(TestCancellation.FromCancellationToken(() => TestContext.Current.CancellationToken));\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["Note: Like all customization options, the setter returns an ",(0,o.jsx)(n.code,{children:"IDisposable"})," that will remove the cancellation on ",(0,o.jsx)(n.code,{children:"Dispose()"}),"."]})}),"\n",(0,o.jsxs)(n.p,{children:["You can overwrite or apply the ",(0,o.jsx)(n.code,{children:"CancellationToken"})," also on individual expectations, using the ",(0,o.jsx)(n.code,{children:"WithCancellation(CancellationToken)"})," method, e.g."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"using var cts = new CancellationTokenSource(TimeSpan.FromSeconds(1));\nIAsyncEnumerable<int> myEnumerable = // ...\nawait Expect.That(myEnumerable).All().AreEqualTo(1)\n    .WithCancellation(cts.Token);\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["Note: A local ",(0,o.jsx)(n.code,{children:"CancellationToken"})," will replace the global one and not be applied additionally.\nIf necessary, provide a ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource.createlinkedtokensource",children:"linked cancellation token"})," yourself!"]})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var a=t(6540);const o={},c=a.createContext(o);function l(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);