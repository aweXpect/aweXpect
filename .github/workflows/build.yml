name: Build

on:
  workflow_dispatch:
  push:
    branches: [main, 'release/v[0-9]+.[0-9]+.[0-9]+']
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: "Unit tests"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET SDKs
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
    - name: Run unit tests
      if: matrix.os == 'windows-latest'
      run: ./build.ps1 CodeCoverage
    - name: Run unit tests
      if: matrix.os != 'windows-latest'
      run: ./build.sh CodeCoverage
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-artifacts
        path: |
          ./Artifacts/*
          ./TestResults/*.trx

  api-tests:
      name: "API tests"
      runs-on: ubuntu-latest
      env:
        DOTNET_NOLOGO: true
      steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
      - name: API checks
        run: ./build.sh ApiChecks
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: API-tests
          path: |
            ./Artifacts/*
            ./TestResults/*.trx

  mutation-tests:
      name: "Mutation tests"
      runs-on: ubuntu-latest
      env:
        STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        DOTNET_NOLOGO: true
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Setup .NET SDKs
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: |
              8.0.x
        - name: Run mutation tests
          run: ./build.sh MutationTests

  benchmarks:
      name: "Benchmarks"
      runs-on: ubuntu-latest
      env:
        DOTNET_NOLOGO: true
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Setup .NET SDKs
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: |
              8.0.x
        - name: Run benchmarks
          run: ./build.sh Benchmarks

  static-code-analysis:
      name: "Static code analysis"
      runs-on: windows-latest
      env:
          REPORTGENERATOR_LICENSE: ${{ secrets.REPORTGENERATOR_LICENSE }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DOTNET_NOLOGO: true
      steps:
          - uses: actions/checkout@v4
            with:
                fetch-depth: 0
          - name: Setup .NET SDKs
            uses: actions/setup-dotnet@v4
            with:
                dotnet-version: |
                    8.0.x
          - name: Run Sonar Cloud analysis
            run: ./build.ps1 CodeAnalysis

  publish-test-results:
    name: "Publish Tests Results"
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        comment_mode: always
        files: "artifacts/**/**/*.trx"

  deploy:
      name: "Deploy"
      runs-on: ubuntu-latest
      needs: [ publish-test-results, api-tests, mutation-tests, benchmarks, static-code-analysis ]
      env:
        DOTNET_NOLOGO: true
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Setup .NET SDKs
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: |
              8.0.x
        - name: Pack and push nuget packages
          run: ./build.sh Push
